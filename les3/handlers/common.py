from aiogram import types, F, Router
from aiogram.filters.command import Command
import logging
import random
from keyboards.keyboards import kb1, kb2
from utils.random_fox import fox
import requests  # Import requests library

router = Router()

# Function to get a random image URL
async def get_random_image(url):
    try:
        response = requests.get(url)
        response.raise_for_status()  # Raise error for non-200 status codes
        return response.json()['image']  # Assuming the JSON response contains a 'url' key
    except requests.exceptions.RequestException as e:
        logging.error(f"Error fetching random image: {e}")
        return None #data.get('image')#None

#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(Command('start'))
async def cmd_start(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {name}', reply_markup=kb1)


#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /stop
@router.message(Command('stop'))
async def cmd_stop(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ü–æ–∫–∞, {name}')


#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fox
@router.message(Command('fox'))
@router.message(Command('–ª–∏—Å–∞'))
@router.message(F.text.lower() == '–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É')
async def cmd_fox(message: types.Message):
    name = message.chat.first_name
    img_fox = fox()
    await message.answer(f'–î–µ—Ä–∂–∏ –ª–∏—Å—É, {name}')
    await message.answer_photo(photo=img_fox)
# await message.answer_
# await bot.send_photo(message.from_user.id, photo=img_fox)

# –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /random
@router.message(Command('random'))
async def cmd_random(message: types.Message):
    name = message.chat.first_name
    # Replace with your preferred random image API URL
    random_image_url = "https://randomfox.ca/floof/"  # Example using Picsum API
    img_url = await get_random_image(random_image_url)
    if img_url:
        await message.answer(f'–í–æ—Ç —Ç–µ–±–µ —Å–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞, {name}')
        await message.answer_photo(photo=img_url)
    else:
        await message.answer(f'–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.')


#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@router.message(F.text)
async def msg_echo(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, {name}')
    elif '–ø–æ–∫–∞' == msg_user:
        await message.answer(f'–ü–æ–∫–∞-–ø–æ–∫–∞, {name}')
    elif '—Ç—ã –∫—Ç–æ' in msg_user:
        await message.answer_dice(emoji="üé≤")
    elif '–ª–∏—Å–∞' in msg_user:
        await message.answer(f'–°–º–æ—Ç—Ä–∏ —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å, {name}', reply_markup=kb2)
    else:
        await message.answer(f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')